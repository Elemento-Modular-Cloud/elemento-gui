name: ElectrOS Build and Distribute

on:
  workflow_dispatch:

jobs:
  mac_x86_build:
    runs-on:
      macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_KEY }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build ElectrOS
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Create Executable
        uses: borales/actions-yarn@v4
        with:
          cmd: | 
            electron-forge:make-macos-intel
            electron-forge:intel-installer-dmg

      - name: Push x86-Mac artifact
        uses: actions/upload-artifact@v2
        with:
          name: Elemento_Cloud_App_intel.dmg
          path: electrOS-x64.dmg
          overwrite: true

      # - name: Push Executable
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.SCP_HOST }}
      #     username: ${{ secrets.SCP_USER }}
      #     key: ${{ secrets.SCP_KEY }}
      #     source: dist/electron/ElectrOS-darwin-x64
      #     target:

  mac_arm_build:
    runs-on:
      macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_KEY }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build ElectrOS
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Create Executable
        uses: borales/actions-yarn@v4
        with:
          cmd: | 
            electron-forge:make-macos-arm
            electron-forge:arm-installer-dmg

      - name: Push ARM-Mac artifact
        uses: actions/upload-artifact@v2
        with:
          name: Elemento_Cloud_App_arm.dmg
          path: electrOS-arm64.dmg
          overwrite: true

      # - name: Push Executable
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.SCP_HOST }}
      #     username: ${{ secrets.SCP_USER }}
      #     key: ${{ secrets.SCP_KEY }}
      #     source: dist/electron/ElectrOS-darwin-x64
      #     target:

  win_build:
    runs-on:
      ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_KEY }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build ElectrOS
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Create Executable
        uses: borales/actions-yarn@v4
        with:
          cmd: electron:dist-windows

      - name: Push Win artifact
        uses: actions/upload-artifact@v2
        with:
          name: Elemento_Cloud_App.exe
          path: electrOS/Setup/{{ env.VERSION }}.exe
          overwrite: true

      # - name: Push Executable
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.SCP_HOST }}
      #     username: ${{ secrets.SCP_USER }}
      #     key: ${{ secrets.SCP_KEY }}
      #     source: dist/electron/ElectrOS-win32-x64
      #     target:

  linux_build_arm?:
    runs-on:
      ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_KEY }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build ElectrOS
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Create Executable
        uses: borales/actions-yarn@v4
        with:
          cmd: electron:dist-linux

      - name: Push Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: Elemento_Cloud_App.AppImage
          path: electrOS-linux-x64.AppImage
          overwrite: true

      # - name: Push Executable
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.SCP_HOST }}
      #     username: ${{ secrets.SCP_USER }}
      #     key: ${{ secrets.SCP_KEY }}
      #     source: dist/electron/ElectrOS-linux-x64
      #     target:

  release:
    needs: |
      mac_build
      win_build
      linux_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_KEY }}
          submodules: recursive

      - name: Gather Win Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Elemento_Cloud_App.exe
          path: ./artifacts

      - name: Gather Mac_x86 Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Elemento_Cloud_App_intel.dmg
          path: ./artifacts

      - name: Gather Mac_ARM Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Elemento_Cloud_App.dmg
          path: ./artifacts

      - name: Gather Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Elemento_Cloud_App.AppImage
          path: ./artifacts

      - name: Electros Version
        run: |
          ELECTROS_VERSION=$( cat package.json | grep '"version":' | cut -d '"' -f 4 )
          echo "ELECTROS_VERSION=$(echo $ELECTROS_VERSION)" >> $GITHUB_ENV

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H-%M-%S')" >> "$GITHUB_OUTPUT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: ${{ env.ELECTROS_VERSION }}
          body: |
            Executables of ElectrOS
          draft: false
          prerelease: false

      - name: Upload Win to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/Elemento_Cloud_App.exe
          asset_name: Elemento_Cloud_App.exe
          asset_content_type: application/octet-stream

      - name: Upload Mac_x86 to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/Elemento_Cloud_App_intel.dmg
          asset_name: Elemento_Cloud_App_intel.dmg
          asset_content_type: application/octet-stream

      - name: Upload Mac_ARM to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/Elemento_Cloud_App.dmg
          asset_name: Elemento_Cloud_App.dmg
          asset_content_type: application/octet-stream

      - name: Upload Linux to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/Elemento_Cloud_App.AppImage
          asset_name: Elemento_Cloud_App.AppImage
          asset_content_type: application/octet-stream